Component Hub CLI Tool - Complete Implementation Guide
1. Project Overview
Create a Node.js CLI tool that authenticates with Component Hub and downloads React components to a local project directory.
2. Component Hub API Endpoints
The CLI needs to connect to these endpoints on http://localhost:3001:
Authentication & Project Data:
Apply to Explore.jsx
Individual Component:
Apply to Explore.jsx
3. Authentication System
Project ID: Format project-name-timestamp (e.g., my-app-1703123456)
Access Key: Format ch_ + 32 random chars (e.g., ch_abc123xyz...)
Both are generated when projects are created in Component Hub
Access key goes in request headers for authentication
4. CLI Tool Implementation
File Structure:
Apply to Explore.jsx
package.json:
Apply to Explore.jsx
index.js - Core Implementation:
Apply to Explore.jsx
5. Required CLI Commands
INIT Command:
Apply to Explore.jsx
PULL Command (Primary Functionality):
Apply to Explore.jsx
LIST Command:
Apply to Explore.jsx
6. Component File Format
Each downloaded component should be saved as ComponentName.jsx with this format:
Apply to Explore.jsx
7. Configuration File Format
The CLI should create .componenthub.json:
Apply to Explore.jsx
8. Error Handling Requirements
Authentication Errors:
401: Missing access key â†’ Show init instructions
403: Invalid credentials â†’ Verify project ID and access key
404: Project not found â†’ Check project ID
Network Errors:
Connection refused â†’ Check if Component Hub server is running
Timeout â†’ Retry with exponential backoff
9. User Experience Requirements
Visual Elements:
Use ora for loading spinners
Use chalk for colored terminal output
Show progress for each component download
Display summary of downloaded files
Interactive Elements:
Use inquirer for credential prompts during init
Validate required inputs
Confirm overwrite of existing files
10. Testing Instructions
Setup Test Environment:
Apply to Explore.jsx
Run
Expected Test Results:
init should create .componenthub.json and test connection
list should show available components from project
pull should create ./components/ with .jsx files
Each component file should have metadata header + actual React code
11. Dependencies Installation
Apply to Explore.jsx
Run
12. Security Considerations
Access keys should be treated as secrets
Config file should be added to .gitignore
Validate all API responses before file operations
Sanitize file names to prevent directory traversal
13. Success Criteria
âœ… Authenticate with Component Hub using project ID + access key
âœ… Download all components linked to a specific project
âœ… Save components as properly formatted .jsx files
âœ… Handle errors gracefully with helpful messages
âœ… Provide interactive setup and configuration management
âœ… Display progress and success feedback to user
14. Example Usage Flow
Apply to Explore.jsx
Run
This complete implementation will create a professional CLI tool that seamlessly integrates with your Component Hub platform! ðŸš€